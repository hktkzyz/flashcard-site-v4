/*  1. 卡片根类（card-root）。作用：定义所有卡片的基础形态，无论什么类型的卡片都必须继承这个类。确保所有卡片在圆角、阴影、过渡效果上保持完全一致 */
.card-root {
    /* 背景色：白色 */
    background-color: white;
    /* 四周圆角：0.5rem（8px） */
    border-radius: 0.5rem;
    /* 盒阴影：h-shadow水平阴影0，v-shadow垂直阴影1px，blur模糊半径2px，spread扩展半径0，颜色rgba(0,0,0,0.05)（非常浅的黑色），轻微阴影效果。*/
    box-shadow: 0 5px 10px 0 var(--primary-800);
    /* 过渡：全部 */
    transition: all;
    /* 过渡持续时间：200ms */
    transition-duration: 200ms;
    /* 鼠标：手型指针 */
    cursor: pointer;
    /* 溢出：隐藏。隐藏超出卡片边界的内容，防止内部元素（如图片、文字）溢出破坏卡片形状 */
    overflow: hidden;
    /* 外形比例：1/1（正方形） */
    aspect-ratio: 1 / 1;

    /* 禁用移动端默认点击反白高亮 */
    -webkit-tap-highlight-color: transparent;

    /* 关键：默认允许交互 */
    pointer-events: auto;
}

.card-root:hover {
    /* 盒阴影：两层阴影，对应Tailwind的hover:shadow-md */
    box-shadow: 0 8px 12px -1px var(--primary-800), 0 3px 6px -1px var(--primary-800);
}

/* 触摸结束时恢复初始样式 */
.card-root.end-test {
    box-shadow: 0 5px 10px 0 var(--primary-800) !important;
    /* 强制应用 */
}

/*  2. 卡片图片区容器（所有卡片共用）占卡片高度的60%，实现6:4比例（图片区:内容区） */
.card-img-container {
    /* 让图片容器宽度撑满父元素（卡片） */
    width: 100%;
    /* 背景色：主色50度，浅绿，与页面背景一样。*/
    background-color: var(--primary-50);
    /* 四周内边距：0.75rem（12px）。让图片与容器边缘保持距离，避免贴边 */
    padding: 0.6rem;
    /* 高度：占父元素（卡片）总高度的60%，实现图片区域与下方内容区域6:4的高度比例。要求图片必须是6:4的尺寸。*/
    height: 60%;
}

.card-category .card-img-container {
    padding: 0.4rem;
    /* 适合小卡片的紧凑内边距 */
}

/* 2. 单词卡片（.card-word）的图片容器：大尺寸，用较大padding */
.card-word .card-img-container {
    padding: 0.6rem;
    /* 适合大卡片的宽松内边距 */
}

/*  3. 卡片图片区图片 */
.card-img {
    /* 宽度：占满容器 */
    width: 100%;
    /* 高度：沾满容器 */
    height: 100%;
    /* 对象适应：填满容器。优先保证比例正确，当图片比例与容器不一致时，会裁剪超出容器的部分 */
    object-fit: cover;
    /* 边框顶部左、右圆角：0.5rem（8px） */
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
}

/*  4. 分类卡片（card-category），只保留自身独有样式，基础样式通过 .card-root 类获取（原生css没有继承）。html中直接写<div class="card-root card-category"> */
.card-category {
    /* 启用弹性布局。弹性布局方向：垂直 */
    display: flex;
    flex-direction: column;
    /* 内部元素：垂直居中对齐 */
    align-items: center;
    /* 内部元素：子元素会从容器顶部开始依次排列，图片容器就顶到顶部了 */
    justify-content: flex-start;
    width: 150px;
}

.card-category-text {
    display: flex;
    flex-direction: column;
    /* 内部元素：垂直居中对齐 */
    align-items: center;
    justify-content: center;
    text-align: center;
    width: 100%;
    height: 40%;
}

/*  5. 分类卡片的标题（如"水果类"） */
.card-category__title {
    /* 文本颜色：主色深绿。*/
    color: var(--primary-800);
    /* 字体加粗 */
    font-weight: bold;
    font-size: 1.3rem;

}

/*  6. 分类卡片的描述（如"12个单词"） */
.card-category__desc {
    /* 文本颜色：副色深灰 */
    color: var(--secondary-800);
    /* 常规字重（400） */
    font-weight: normal;
    /* 基础文字大小：0.75rem（12px） */
    font-size: 0.75rem;
}

/* 响应式字体大小：大屏设备（≥768px）时为0.875rem（14px），在较大屏幕上适当增大描述文字，提升可读性 */
@media (min-width: 768px) {
    .card-category__desc {
        font-size: 0.875rem;
    }
}

/*  3. 单词卡片（card-word），只保留自身独有样式，基础样式通过 .card-root 类获取（原生css没有继承）。html中直接写<div class="card-root card-word"> */
.card-word {
    /* 启用弹性布局。弹性布局方向：垂直 */
    display: flex;
    flex-direction: column;
    /* 基础内边距：0.75rem（12px），适用于小屏设备，在有限空间内保持内容紧凑不拥挤 */
    max-width: 28rem;
    /* 宽度：占满父容器。在小屏设备上自适应全屏宽度，在大屏设备上受max-width限制 */
    width: 100%;
    /* 新增：确保卡片在父容器中居中（配合margin: 0 auto生效） */
    margin-left: auto;
    margin-right: auto;
    margin-top: 3rem;
    /* 顶部留白 */
    margin-bottom: 3rem;
    /* 底部留白 */
    max-width: min(100vw - 2rem, 28rem) !important;
    /* 关键：最大宽度不超过屏幕宽度减去2rem（1rem左右内边距），避免横向滚动。主要是解决单词过长的问题。 */
}

/* 响应式内边距：大屏设备（≥768px）时为1.5rem（24px），在平板/电脑等较大屏幕上增加内边距，提升内容宽松度 */
@media (min-width: 768px) {
    .card-word {
        margin-top: 6rem;
        /* 顶部留白 */
        margin-bottom: 6rem;
        /* 底部留白 */
    }
}

/*  4. 第1行：单词 + 发音按钮（英音/美音） */
.card-word__row-1 {
    /* 启用弹性布局 */
    display: flex;
    /* 元素在交叉轴（垂直方向）上居中对齐，确保行内元素（如单词和按钮）在垂直方向上居中对齐 */
    align-items: center;
    /* 元素在主轴（水平方向）上两端对齐。使单词文本靠左，操作按钮靠右，充分利用行空间 */
    justify-content: space-between;
    /* 底部外边距：0.5rem（8px）*/
    margin-bottom: 0.5rem;
    margin-top: 0.5rem;
    margin-left: 1.5rem;
    margin-right: 1.5rem;
}

/*  5. 单词文本（如"apple"） */
.card-word__en {
    /* 文本颜色：副色深灰 */
    /* 字体加粗 */
    font-weight: bold;
    /* 基础文字大小：1.5rem（24px），适合小屏设备，保证单词清晰易读 */
    font-size: 1.3rem;
    white-space: nowrap;
    /* 禁止单词换行，强制横向显示 */
    overflow-x: auto;
    /* 单词过长时显示横向滚动条，不挤压其他内容 */
    overflow-y: hidden;
    /* 隐藏纵向滚动条（避免多余空白） */
    padding-bottom: 2px;
    /* 可选：给滚动条留一点空间，避免遮挡文字 */
    /* 👇 新增2行：强制单词容器宽度不超过父元素，彻底避免撑大卡片 */
    width: 65%;
    /* 单词容器宽度 = 父容器（.card-word__row-1）宽度 */
    box-sizing: border-box;
    /* 防止 padding 导致宽度溢出（比如你加的 padding-bottom） */
    text-align: left;
    /* 直接加隐藏滚动条的属性，所有设备生效 */
    scrollbar-width: none;

    /* Firefox */
    &::-webkit-scrollbar {
        display: none;
    }
}

/*  响应式字体大小：大屏设备（≥768px）时为2rem（32px），在较大屏幕上增大单词字号，提升视觉突出度 */
@media (min-width: 768px) {
    .card-word__en {
        font-size: 1.6rem;
    }
}

/* 新增状态类1：必掌握单词（黑色） */
.card-word__en--required {
    color: var(--secondary-800);
}

/* 新增状态类2：拓展单词（浅灰） */
.card-word__en--extended {
    color: var(--secondary-500);
    /* 次要色，柔和 */
    font-style: italic;
}

/*  6. 发音按钮的容器（包裹两个按钮） */
.card-word__audio {
    /* 启用弹性布局。使容器内的按钮（如播放、音量按钮）水平排列（默认是水平方向） */
    display: flex;
    /* 子元素之间的间距为0.25rem（4px），让多个音频按钮之间保持紧凑且不拥挤的距离 */
    gap: 1rem;
}

/*  7. 单个发音按钮（英音/美音） */
.card-word__audio-btn {
    /* 启用弹性布局。使按钮内的图标和文字水平排列 */
    display: flex;
    /* 元素在交叉轴（垂直方向）上居中对齐， 确保图标和文字在按钮内垂直居中 */
    align-items: center;
    /* 按钮内元素（图标与文字）的间距为0.25rem（4px），保持图标和文字的紧凑关联 */
    gap: 0.25rem;
    /* 按钮文本和图标颜色使用主色深绿 */
    color: var(--primary-800);
    /* 覆盖button原生样式 */
    background: transparent;
    border: none;
    padding: 0;
    margin: 0;
    /* 保留交互特性 */
    cursor: pointer;
    /* 👇 新增：点击反馈的过渡（放大+恢复） */
    transition: transform 0.2s ease-out;
    /* 👇 新增：彻底禁用触摸反馈传递 */
    touch-action: manipulation;
    -webkit-tap-highlight-color: transparent;
    font-size: 1rem;
}

/* 👇 新增：点击按钮时放大（用户能看到点击反馈） */
.card-word__audio-btn:active {
    transform: scale(1.3);
    /* 点击时放大1.2倍，松手后恢复 */
}

/* 👇 新增：关键隔离！点击按钮时，卡片强制无任何变化 */
.card-root:has(.card-word__audio-btn:active) {
    box-shadow: 0 5px 10px 0 var(--primary-800) !important;
    transition: none !important;
}

/*  电脑端：hover 交互效果（仅支持hover的设备） */
@media (hover: hover) {
    .card-word__audio-btn {
        /* 为transform属性添加过渡动画，持续时间200ms */
        transition-property: transform;
        transition-duration: 200ms;
    }

    /* 鼠标悬停时的效果 */
    .card-word__audio-btn:hover {
        /* 轻微放大按钮（1.1倍） */
        transform: scale(1.1);
    }
}

/*  手机端：不设置CSS交互样式（由JS控制） */
@media (hover: none) {
    /* 留空，明确由JS处理交互 */
}

/*  8. 第2行：音标 + 翻译容器（仅保留必要布局） */
.card-word__row-2 {
    /* 启用弹性布局，确保该行内的元素（如音标和翻译）在同一水平线上排列 */
    display: flex;
    /* 元素在交叉轴（垂直方向）上居中对齐 */
    align-items: center;
    margin-left: 1.5rem;
    margin-right: 1.5rem;
    gap: 1rem;
    color: var(--secondary-800);
    font-size: 1rem;
}

/*  响应式字体大小：大屏设备（≥768px）时为1rem（16px），在较大屏幕上适当增大，提升可读性 */
@media (min-width: 768px) {
    .card-word__row-2 {
        font-size: 1.3rem;
    }
}

/*  10. 单词卡片的例句（如"I ate an apple..."） */
.card-word__row-3 {
    margin-left: 1.5rem;
    margin-right: 1.5rem;
    font-size: 1rem;
    /* 斜体样式 */
    font-style: italic;
    /* 顶部外边距为1rem（16px），与上方的释义内容保持明显距离，清晰区分内容模块 */
    margin-top: 0.5rem;
    /* 2. 明确文本左对齐（覆盖浏览器默认或父元素继承的对齐方式） */
    text-align: left;
    /* 3. 可选：给文本加垂直间距，避免换行后紧贴边框（根据需求调整） */
    padding: 0.25rem 0;

    white-space: nowrap;
    /* 禁止例句换行，强制一行显示 */
    overflow-x: auto;
    /* 超出宽度时显示横向滚动条 */
    overflow-y: hidden;
    /* 隐藏纵向滚动条（避免误触） */
    scrollbar-width: none;

    /* Firefox */
    &::-webkit-scrollbar {
        display: none;
    }
}

/*  响应式字体大小：大屏设备（≥768px）时为1rem（16px），在较大屏幕上适当增大，提升可读性 */
@media (min-width: 768px) {
    .card-word__row-3 {
        font-size: 1.3rem;
    }
}

/*  11. 整体grid布局容器 */
.category-grid {
    /* 启用CSS Grid布局，使内部子元素（分类卡片）按网格排列，支持灵活的多行多列布局 */
    display: grid;
    /* 网格列数：默认2列（适用于屏幕宽度<640px的小屏设备），手机等小屏设备每行显示2个分类卡片，对应Tailwind的grid-cols-2 */
    grid-template-columns: repeat(2, minmax(0, 1fr));
    /* 网格间距：1rem（16px），控制卡片之间的间距，确保布局紧凑且不拥挤 */
    gap: 1rem;
    /* 左右内边距：0.5rem（8px），使边缘卡片与屏幕保持距离，避免贴边。page-container 已有 px-4，如何重叠边距过大，可考虑减小或删除。 */
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    /* 最大宽度限制：5xl（通常为80rem≈1280px，可根据实际需求调整），防止在超大屏幕上网格过宽，保持卡片布局的合理性 */
    margin-left: auto;
    margin-right: auto;
    /* 左侧间距：最小1rem，最大3rem，随间按屏幕宽度5%自适应 */
    padding-left: clamp(1rem, 5vw, 3rem);
    /* 右侧间距：与左侧保持一致 */
    padding-right: clamp(1rem, 5vw, 3rem);
}

/* 小屏设备（≥640px）：网格列数调整为3列。适用于大屏手机/小平板，每行显示3个分类卡片 */
@media (min-width: 640px) {
    .category-grid {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
}

/*  中等屏幕（≥768px）：网格列数调整为4列，间距增大。适用于平板/小笔记本，每行显示4个分类卡片，间距扩大到1.5rem */
@media (min-width: 768px) {
    .category-grid {
        grid-template-columns: repeat(4, minmax(0, 1fr));
        gap: 1.5rem;
        /* 6=1.5rem */
    }
}

/*  大屏幕（≥1024px）：网格列数调整为5列。适用于电脑等宽屏设备，每行显示5个分类卡片 */
@media (min-width: 1024px) {
    .category-grid {
        grid-template-columns: repeat(5, minmax(0, 1fr));
    }
}

/* 1. 首页场景：.category-grid 下的卡片点击触发:active */
.category-grid .card-root:active {
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1) !important;
    transform: scale(0.98) !important;
    transition: all 0.1s ease-out !important;
    /* 明确过渡，避免继承异常 */
}

/* 2. 分类页场景：点击图片（#flash-card-img）时，卡片触发:active */
.card-root:has(#flash-card-img:active) {
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1) !important;
    transform: scale(0.98) !important;
    transition: all 0.1s ease-out !important;
    /* 明确过渡，避免继承异常 */
}

/* 3. 兜底：强制取消非目标场景的:active（优化优先级和过渡） */
.card-root:active {
    /* 先覆盖所有:active的默认样式，再用:not排除目标场景 */
    box-shadow: 0 5px 10px 0 var(--primary-800) !important;
    transform: none !important;
    transition: none !important;
    /* 关键：禁用过渡，避免首次点击的位移残留 */
}

/* -------------------------- 修正：电脑端hover优化（包含音频按钮场景） -------------------------- */
@media (hover: hover) {

    /* 关键：同时排除"图片"和"音频按钮"，点击这两个区域外的空白区 → 保留hover */
    .card-word:hover:active:not(:has(#flash-card-img:active)) {
        box-shadow: 0 8px 12px -1px var(--primary-800), 0 3px 6px -1px var(--primary-800) !important;
        transition: none !important;
    }
}

/* -------------------------- 新增2：手机端适配（避免无hover时的异常样式） -------------------------- */
@media (hover: none) {

    /* 手机端：分类页卡片默认无hover，取消:active时的异常阴影 */
    .card-word:active:not(:has(#flash-card-img:active)) {
        box-shadow: 0 5px 10px 0 var(--primary-800) !important;
        transition: none !important;
    }
}